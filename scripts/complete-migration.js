#!/usr/bin/env node

/**
 * –ü–û–õ–ù–´–ô –°–ö–†–ò–ü–¢ –ú–ò–ì–†–ê–¶–ò–ò –ù–ê SUPABASE
 * –ó–∞–ø—É—Å–∫: node scripts/complete-migration.js
 */

const { createClient } = require('@supabase/supabase-js')
const fs = require('fs')
const path = require('path')

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://nmdsiqsidbqnpoiidqoo.supabase.co'
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5tZHNpcXNpZGJxbnBvaWlkcW9vIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg5MzcxMzYsImV4cCI6MjA3NDUxMzEzNn0.9XzQBnvIgM8WwhhYIBxO-zJZzktbqkr1K9dvBcBWtUM'

const supabase = createClient(supabaseUrl, supabaseAnonKey)

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m',
}

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`)
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
async function testConnection() {
  try {
    const { data, error } = await supabase
      .from('homepage_data')
      .select('id')
      .limit(1)

    if (error) {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase: ${error.message}`, 'red')
      return false
    }

    log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ', 'green')
    return true
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase: ${error.message}`, 'red')
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
async function migrateHomepageData() {
  log('üìÑ –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...', 'blue')
  
  try {
    const { data, error } = await supabase
      .from('homepage_data')
      .select('id')
      .limit(1)

    if (error) {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${error.message}`, 'red')
      return false
    }

    if (data && data.length > 0) {
      log('‚ÑπÔ∏è –î–∞–Ω–Ω—ã–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç', 'yellow')
      return true
    }

    // –î–∞–Ω–Ω—ã–µ —É–∂–µ –≤—Å—Ç–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ SQL —Å–∫—Ä–∏–ø—Ç
    log('‚úÖ –î–∞–Ω–Ω—ã–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≥–æ—Ç–æ–≤—ã', 'green')
    return true
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${error.message}`, 'red')
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
async function migrateContactsData() {
  log('üìû –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤...', 'blue')
  
  try {
    const { data, error } = await supabase
      .from('contacts_data')
      .select('id')
      .limit(1)

    if (error) {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: ${error.message}`, 'red')
      return false
    }

    if (data && data.length > 0) {
      log('‚ÑπÔ∏è –î–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç', 'yellow')
      return true
    }

    // –î–∞–Ω–Ω—ã–µ —É–∂–µ –≤—Å—Ç–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ SQL —Å–∫—Ä–∏–ø—Ç
    log('‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≥–æ—Ç–æ–≤—ã', 'green')
    return true
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: ${error.message}`, 'red')
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async function migrateUsers() {
  log('üë• –ú–∏–≥—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...', 'blue')
  
  try {
    const { data, error } = await supabase
      .from('users')
      .select('id')
      .limit(1)

    if (error) {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${error.message}`, 'red')
      return false
    }

    if (data && data.length > 0) {
      log('‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç', 'yellow')
      return true
    }

    // –î–∞–Ω–Ω—ã–µ —É–∂–µ –≤—Å—Ç–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ SQL —Å–∫—Ä–∏–ø—Ç
    log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥–æ—Ç–æ–≤—ã', 'green')
    return true
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${error.message}`, 'red')
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
async function migrateNews() {
  log('üì∞ –ú–∏–≥—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ—Å—Ç–∏...', 'blue')
  
  try {
    const { data, error } = await supabase
      .from('news_articles')
      .select('id')
      .limit(1)

    if (error) {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π: ${error.message}`, 'red')
      return false
    }

    if (data && data.length > 0) {
      log('‚ÑπÔ∏è –ù–æ–≤–æ—Å—Ç–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç', 'yellow')
      return true
    }

    // –î–∞–Ω–Ω—ã–µ —É–∂–µ –≤—Å—Ç–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ SQL —Å–∫—Ä–∏–ø—Ç
    log('‚úÖ –ù–æ–≤–æ—Å—Ç–∏ –≥–æ—Ç–æ–≤—ã', 'green')
    return true
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π: ${error.message}`, 'red')
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
async function checkTables() {
  log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...', 'blue')
  
  const tables = [
    'users',
    'homepage_data', 
    'contacts_data',
    'news_articles',
    'orders',
    'projects',
    'sessions'
  ]

  for (const table of tables) {
    try {
      const { data, error } = await supabase
        .from(table)
        .select('*')
        .limit(1)

      if (error) {
        log(`‚ùå –¢–∞–±–ª–∏—Ü–∞ ${table} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${error.message}`, 'red')
        return false
      }

      log(`‚úÖ –¢–∞–±–ª–∏—Ü–∞ ${table} –≥–æ—Ç–æ–≤–∞`, 'green')
    } catch (error) {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã ${table}: ${error.message}`, 'red')
      return false
    }
  }

  return true
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ RLS –ø–æ–ª–∏—Ç–∏–∫
async function checkRLS() {
  log('üîí –ü—Ä–æ–≤–µ—Ä—è–µ–º RLS –ø–æ–ª–∏—Ç–∏–∫–∏...', 'blue')
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø—É–±–ª–∏—á–Ω—ã–º –¥–∞–Ω–Ω—ã–º
    const { data: homepageData, error: homepageError } = await supabase
      .from('homepage_data')
      .select('id')
      .limit(1)

    if (homepageError) {
      log(`‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ homepage_data: ${homepageError.message}`, 'red')
      return false
    }

    const { data: contactsData, error: contactsError } = await supabase
      .from('contacts_data')
      .select('id')
      .limit(1)

    if (contactsError) {
      log(`‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ contacts_data: ${contactsError.message}`, 'red')
      return false
    }

    const { data: newsData, error: newsError } = await supabase
      .from('news_articles')
      .select('id')
      .eq('published', true)
      .limit(1)

    if (newsError) {
      log(`‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ news_articles: ${newsError.message}`, 'red')
      return false
    }

    log('‚úÖ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ', 'green')
    return true
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ RLS: ${error.message}`, 'red')
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
async function createConfigFile() {
  log('‚öôÔ∏è –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...', 'blue')
  
  const envContent = `# Supabase Configuration
NEXT_PUBLIC_SUPABASE_URL=https://nmdsiqsidbqnpoiidqoo.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5tZHNpcXNpZGJxbnBvaWlkcW9vIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg5MzcxMzYsImV4cCI6MjA3NDUxMzEzNn0.9XzQBnvIgM8WwhhYIBxO-zJZzktbqkr1K9dvBcBWtUM

# Migration completed on: ${new Date().toISOString()}
`

  try {
    fs.writeFileSync('.env.local', envContent)
    log('‚úÖ –§–∞–π–ª .env.local —Å–æ–∑–¥–∞–Ω', 'green')
    return true
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ .env.local: ${error.message}`, 'red')
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
async function createInstructionsFile() {
  log('üìã –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏...', 'blue')
  
  const instructionsContent = `# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ Supabase

## ‚úÖ –ß—Ç–æ —É–∂–µ —Å–¥–µ–ª–∞–Ω–æ:
1. –°–æ–∑–¥–∞–Ω—ã –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ Supabase
2. –í—Å—Ç–∞–≤–ª–µ–Ω—ã –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
3. –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã RLS –ø–æ–ª–∏—Ç–∏–∫–∏
4. –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.local

## üîÑ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

### 1. –û–±–Ω–æ–≤–∏—Ç–µ –∏–º–ø–æ—Ä—Ç—ã –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö:

–ó–∞–º–µ–Ω–∏—Ç–µ –≤ —Ñ–∞–π–ª–∞—Ö:
- \`lib/homepage-data.tsx\` ‚Üí \`lib/supabase-homepage.ts\`
- \`lib/contacts-data.ts\` ‚Üí \`lib/supabase-contacts.ts\`
- \`lib/news-data.ts\` ‚Üí \`lib/supabase-news.ts\`
- \`lib/admin-storage.ts\` ‚Üí \`lib/supabase-admin.ts\`

### 2. –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã:

\`\`\`typescript
// –ë—ã–ª–æ:
const data = getHomepageData()

// –°—Ç–∞–ª–æ:
const [data, setData] = useState(null)
const [loading, setLoading] = useState(true)

useEffect(() => {
  const loadData = async () => {
    try {
      setLoading(true)
      const result = await getHomepageData()
      setData(result)
    } catch (error) {
      console.error('Error:', error)
    } finally {
      setLoading(false)
    }
  }
  loadData()
}, [])
\`\`\`

### 3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:

1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ \`npm run dev\`
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π

### 4. –û—á–∏—Å—Ç–∏—Ç–µ localStorage (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):

–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ:
\`\`\`javascript
localStorage.removeItem('homepage-data')
localStorage.removeItem('contacts_data')
localStorage.removeItem('admin_users')
localStorage.removeItem('admin_news')
localStorage.removeItem('admin_orders')
localStorage.removeItem('admin_projects')
localStorage.removeItem('current_user')
localStorage.removeItem('admin_token')
\`\`\`

## üÜò –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:

1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Supabase Dashboard ‚Üí Logs
3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ .env.local –∑–∞–≥—Ä—É–∂–µ–Ω
4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –≤ Supabase

## üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞:

- Supabase Dashboard: https://supabase.com/dashboard
- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://supabase.com/docs
- –õ–æ–≥–∏: Supabase Dashboard ‚Üí Logs ‚Üí API

–î–∞—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: ${new Date().toISOString()}
`

  try {
    fs.writeFileSync('SUPABASE_MIGRATION_INSTRUCTIONS.md', instructionsContent)
    log('‚úÖ –§–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ —Å–æ–∑–¥–∞–Ω', 'green')
    return true
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: ${error.message}`, 'red')
    return false
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏
async function runMigration() {
  log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é –Ω–∞ Supabase...', 'cyan')
  log('', 'reset')

  const steps = [
    { name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è', fn: testConnection },
    { name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü', fn: checkTables },
    { name: '–ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã', fn: migrateHomepageData },
    { name: '–ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤', fn: migrateContactsData },
    { name: '–ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', fn: migrateUsers },
    { name: '–ú–∏–≥—Ä–∞—Ü–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π', fn: migrateNews },
    { name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ RLS –ø–æ–ª–∏—Ç–∏–∫', fn: checkRLS },
    { name: '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏', fn: createConfigFile },
    { name: '–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π', fn: createInstructionsFile },
  ]

  let successCount = 0
  let totalSteps = steps.length

  for (const step of steps) {
    log(`\nüìã ${step.name}...`, 'blue')
    try {
      const result = await step.fn()
      if (result) {
        successCount++
        log(`‚úÖ ${step.name} - –£–°–ü–ï–®–ù–û`, 'green')
      } else {
        log(`‚ùå ${step.name} - –û–®–ò–ë–ö–ê`, 'red')
      }
    } catch (error) {
      log(`‚ùå ${step.name} - –û–®–ò–ë–ö–ê: ${error.message}`, 'red')
    }
  }

  log('', 'reset')
  log('=============================================', 'cyan')
  log(`–ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê: ${successCount}/${totalSteps} —à–∞–≥–æ–≤ —É—Å–ø–µ—à–Ω–æ`, 
      successCount === totalSteps ? 'green' : 'yellow')
  log('=============================================', 'cyan')

  if (successCount === totalSteps) {
    log('üéâ –í–°–ï –ì–û–¢–û–í–û! –ú–æ–∂–µ—Ç–µ –Ω–∞—á–∏–Ω–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Supabase', 'green')
    log('üìñ –ß–∏—Ç–∞–π—Ç–µ SUPABASE_MIGRATION_INSTRUCTIONS.md –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤', 'blue')
  } else {
    log('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —à–∞–≥–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ', 'yellow')
  }

  log('', 'reset')
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  runMigration().catch(error => {
    log(`üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`, 'red')
    process.exit(1)
  })
}

module.exports = { runMigration, testConnection }
