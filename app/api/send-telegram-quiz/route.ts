export async function POST(request: Request) {
  try {
    const quizData = await request.json()

    if (!quizData.name || !quizData.phone) {
      return Response.json({ error: "–ò–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" }, { status: 400 })
    }

    const botToken = "8193287485:AAHtkqVemG8h9dV2gR0_bmQTkWcceuXQiaE"
    const chatId = "-4845825244"

    // –ú–∞–ø–ø–∏–Ω–≥ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è —á–∏—Ç–∞–µ–º–æ–≥–æ –≤–∏–¥–∞
    const propertyTypeLabels: { [key: string]: string } = {
      apartment: "–ö–≤–∞—Ä—Ç–∏—Ä–∞",
      house: "–ß–∞—Å—Ç–Ω—ã–π –¥–æ–º",
      other: "–î—Ä—É–≥–æ–µ",
    }

    const areaLabels: { [key: string]: string } = {
      "20-50": "–æ—Ç 20 –¥–æ 50 –º¬≤",
      "50-80": "–æ—Ç 50 –¥–æ 80 –º¬≤",
      "80-150": "–æ—Ç 80 –¥–æ 150 –º¬≤",
      "150+": "–±–æ–ª–µ–µ 150 –º¬≤",
    }

    const timelineLabels: { [key: string]: string } = {
      soon: "–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è",
      month: "–í —Ç–µ—á–µ–Ω–∏–µ 1 –º–µ—Å—è—Ü–∞",
      "3months": "–í —Ç–µ—á–µ–Ω–∏–µ 1-3 –º–µ—Å—è—Ü–µ–≤",
      undefined: "–°—Ä–æ–∫–∏ –ø–æ–∫–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã",
    }

    const cleanPhone = quizData.phone.replace(/\s+/g, "")

    const message = `üìã –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–º–µ—Ç—É —Å —Å–∞–π—Ç–∞

üë§ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:

‚Ä¢ –ò–º—è: ${quizData.name}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: ${cleanPhone}

üè† –î–µ—Ç–∞–ª–∏ –æ–±—ä–µ–∫—Ç–∞:

‚Ä¢ –¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏: ${propertyTypeLabels[quizData.propertyType] || quizData.propertyType}
‚Ä¢ –ü–ª–æ—â–∞–¥—å: ${areaLabels[quizData.area] || quizData.area}
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç: ${quizData.rooms}
‚Ä¢ –°—Ä–æ–∫–∏ –Ω–∞—á–∞–ª–∞: ${timelineLabels[quizData.timeline] || quizData.timeline}

üìÖ –î–∞—Ç–∞ –∑–∞—è–≤–∫–∏: ${new Date().toLocaleString("ru-RU", {
      timeZone: "Asia/Almaty",
      year: "numeric",
      month: "2-digit",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
    })}`

    const telegramUrl = `https://api.telegram.org/bot${botToken}/sendMessage`

    const response = await fetch(telegramUrl, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: "HTML",
      }),
    })

    if (!response.ok) {
      throw new Error("Failed to send telegram message")
    }

    return Response.json({ success: true })
  } catch (error) {
    console.error("Error sending telegram message:", error)
    return Response.json({ error: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è" }, { status: 500 })
  }
}
