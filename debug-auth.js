const { createClient } = require('@supabase/supabase-js')

// Supabase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const supabaseUrl = 'https://nmdsiqsidbqnpoiidqoo.supabase.co'
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5tZHNpcXNpZGJxbnBvaWlkcW9vIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg5MzcxMzYsImV4cCI6MjA3NDUxMzEzNn0.9XzQBnvIgM8WwhhYIBxO-zJZzktbqkr1K9dvBcBWtUM'

const supabase = createClient(supabaseUrl, supabaseAnonKey)

async function debugAuth() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...')
    
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    const { data: testData, error: testError } = await supabase
      .from('users')
      .select('count')
      .limit(1)
    
    if (testError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase:', testError)
      return
    }
    
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ')
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin...')
    const { data: existingUser, error: userError } = await supabase
      .from('users')
      .select('*')
      .eq('username', 'admin')
      .single()
    
    if (userError && userError.code !== 'PGRST116') {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError)
      return
    }
    
    if (existingUser) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin –Ω–∞–π–¥–µ–Ω:')
      console.log('  ID:', existingUser.id)
      console.log('  Username:', existingUser.username)
      console.log('  Role:', existingUser.role)
      console.log('  Password hash:', existingUser.password_hash)
      console.log('  Created at:', existingUser.created_at)
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º...')
      
      // 3. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin
      const { data: newUser, error: createError } = await supabase
        .from('users')
        .insert([{
          id: '00000000-0000-0000-0000-000000000001',
          username: 'admin',
          password_hash: 'admin123',
          role: 'admin',
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        }])
        .select()
        .single()
      
      if (createError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', createError)
        return
      }
      
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —Å–æ–∑–¥–∞–Ω:')
      console.log('  ID:', newUser.id)
      console.log('  Username:', newUser.username)
      console.log('  Role:', newUser.role)
    }
    
    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...')
    const { data: authUser, error: authError } = await supabase
      .from('users')
      .select('*')
      .eq('username', 'admin')
      .single()
    
    if (authError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', authError)
      return
    }
    
    if (authUser.password_hash === 'admin123') {
      console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!')
      console.log('  –õ–æ–≥–∏–Ω: admin')
      console.log('  –ü–∞—Ä–æ–ª—å: admin123')
    } else {
      console.log('‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç')
    }
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error)
  }
}

debugAuth()
